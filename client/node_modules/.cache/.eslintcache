[{"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\index.js":"1","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\reportWebVitals.js":"2","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\App.js":"3","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\redux\\store.js":"4","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\redux\\rootSlice.js":"5","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\components\\Loader.js":"6","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\Login.js":"7","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\index.js":"8","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\index.js":"9","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\components\\Header.js":"10","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminCourses.js":"11","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminAbout.js":"12","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminIntro.js":"13","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminContact.js":"14","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminExperiences.js":"15","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminProjects.js":"16","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Footer.js":"17","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Experiences.js":"18","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Contact.js":"19","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Courses.js":"20","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\LeftSider.js":"21","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Projects.js":"22","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\About.js":"23","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Intro.js":"24","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\components\\SectionTitle.js":"25"},{"size":446,"mtime":1754320624063,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1754320624087,"results":"28","hashOfConfig":"27"},{"size":1593,"mtime":1756732187368,"results":"29","hashOfConfig":"27"},{"size":268,"mtime":1754320624085,"results":"30","hashOfConfig":"27"},{"size":694,"mtime":1754320624085,"results":"31","hashOfConfig":"27"},{"size":474,"mtime":1756766390881,"results":"32","hashOfConfig":"27"},{"size":1728,"mtime":1756766715990,"results":"33","hashOfConfig":"27"},{"size":2063,"mtime":1754320624074,"results":"34","hashOfConfig":"27"},{"size":860,"mtime":1754320624084,"results":"35","hashOfConfig":"27"},{"size":612,"mtime":1757081496932,"results":"36","hashOfConfig":"27"},{"size":5437,"mtime":1754320624068,"results":"37","hashOfConfig":"27"},{"size":2010,"mtime":1754320624067,"results":"38","hashOfConfig":"27"},{"size":1945,"mtime":1754320624071,"results":"39","hashOfConfig":"27"},{"size":1999,"mtime":1754320624067,"results":"40","hashOfConfig":"27"},{"size":5185,"mtime":1754320624070,"results":"41","hashOfConfig":"27"},{"size":5546,"mtime":1754320624073,"results":"42","hashOfConfig":"27"},{"size":544,"mtime":1757160584318,"results":"43","hashOfConfig":"27"},{"size":1712,"mtime":1757085446008,"results":"44","hashOfConfig":"27"},{"size":1278,"mtime":1757085451729,"results":"45","hashOfConfig":"27"},{"size":1814,"mtime":1757085448677,"results":"46","hashOfConfig":"27"},{"size":828,"mtime":1756912732646,"results":"47","hashOfConfig":"27"},{"size":1810,"mtime":1757007257989,"results":"48","hashOfConfig":"27"},{"size":1356,"mtime":1757097573381,"results":"49","hashOfConfig":"27"},{"size":1048,"mtime":1756910406435,"results":"50","hashOfConfig":"27"},{"size":320,"mtime":1754320624062,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fw1g71",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\index.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\App.js",["135","136","137"],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\redux\\store.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\redux\\rootSlice.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\components\\Loader.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\Login.js",[],[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\index.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\index.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\components\\Header.js",[],[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminCourses.js",["138"],[],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Modal, Form, message } from \"antd\";\r\nimport { HideLoading, ReloadData, ShowLoading } from \"../../redux/rootSlice\";\r\nimport axios from \"axios\";\r\n\r\nfunction AdminCourses() {\r\n  const dispatch = useDispatch();\r\n  const { portfolioData } = useSelector((state) => state.root);\r\n  const { courses } = portfolioData;\r\n  const [showAddEditModal, setShowAddEditModal] = React.useState(false);\r\n  const [selectedItemForEdit, setSelectedItemForEdit] = React.useState(null);\r\n  const [type, setType] = React.useState(\"add\");\r\n  const [form] = Form.useForm();\r\n  const onFinish = async (values) => {\r\n    try {\r\n      const tempTechnologies = values?.technologies?.split(\",\") || [];\r\n      values.technologies = tempTechnologies;\r\n      dispatch(ShowLoading());\r\n      let response;\r\n      if (selectedItemForEdit) {\r\n        response = await axios.post(\"/api/portfolio/update-course\", {\r\n          ...values,\r\n          _id: selectedItemForEdit._id,\r\n        });\r\n      } else {\r\n        response = await axios.post(\"/api/portfolio/add-course\", values);\r\n      }\r\n\r\n      dispatch(HideLoading());\r\n      if (response.data.success) {\r\n        message.success(response.data.message);\r\n        setShowAddEditModal(false);\r\n        setSelectedItemForEdit(null);\r\n        dispatch(HideLoading());\r\n        dispatch(ReloadData(true));\r\n        form.resetFields();\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoading());\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  const onDelete = async (item) => {\r\n    try {\r\n      dispatch(ShowLoading());\r\n      const response = await axios.post(\"/api/portfolio/delete-course\", {\r\n        _id: item._id,\r\n      });\r\n      dispatch(HideLoading());\r\n      if (response.data.success) {\r\n        message.success(response.data.message);\r\n        dispatch(HideLoading());\r\n        dispatch(ReloadData(true));\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoading());\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          className=\"bg-primary px-5 py-2 text-white\"\r\n          onClick={() => {\r\n            setSelectedItemForEdit(null);\r\n            setShowAddEditModal(true);\r\n          }}\r\n        >\r\n          Add Course\r\n        </button>\r\n      </div>\r\n      <div className=\"grid grid-cols-3 gap-5 mt-5 sm:grid-cols-1\">\r\n        {courses.map((course) => (\r\n          <div className=\"shadow border p-5 border-gray-400 flex flex-col gap-5\">\r\n            <h1 className=\"text-primary text-xl font-bold\">{course.title}</h1>\r\n            <hr />\r\n            <img src={course.image} alt=\"\" className=\"h-60 w-80 rounded\" />\r\n\r\n            <h1>{course.description}</h1>\r\n            <div className=\"flex justify-end gap-5 mt-5\">\r\n              <button\r\n                className=\"bg-red-500 text-white px-5 py-2 \"\r\n                onClick={() => {\r\n                  onDelete(course);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <button\r\n                className=\"bg-primary text-white px-5 py-2\"\r\n                onClick={() => {\r\n                  setSelectedItemForEdit(course);\r\n                  setShowAddEditModal(true);\r\n                  setType(\"edit\");\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {(type === \"add\" || selectedItemForEdit) && (\r\n        <Modal\r\n          visible={showAddEditModal}\r\n          title={selectedItemForEdit ? \"Edit Course\" : \"Add Course\"}\r\n          footer={null}\r\n          onCancel={() => {\r\n            setShowAddEditModal(false);\r\n            setSelectedItemForEdit(null);\r\n          }}\r\n        >\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            onFinish={onFinish}\r\n            initialValues={\r\n              {\r\n                ...selectedItemForEdit,\r\n                technologies: selectedItemForEdit?.technologies?.join(\" , \"),\r\n              } || {}\r\n            }\r\n          >\r\n            <Form.Item name=\"title\" label=\"Title\">\r\n              <input placeholder=\"Title\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"image\" label=\"Image URL\">\r\n              <input placeholder=\"Image\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"description\" label=\"Description\">\r\n              <textarea placeholder=\"Description\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"link\" label=\"Link\">\r\n              <input placeholder=\"Link\" />\r\n            </Form.Item>\r\n\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                className=\"border-primary text-primary px-5 py-2\"\r\n                onClick={() => {\r\n                  setShowAddEditModal(false);\r\n                  setSelectedItemForEdit(null);\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button className=\"bg-primary text-white px-5 py-2\">\r\n                {selectedItemForEdit ? \"Update\" : \"Add\"}\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminCourses;\r\n","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminAbout.js",["139"],[],"import React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ShowLoading, HideLoading } from \"../../redux/rootSlice\";\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nfunction AdminAbout() {\r\n  const dispatch = useDispatch();\r\n  const { portfolioData } = useSelector((state) => state.root);\r\n  const onFinish = async (values) => {\r\n    try {\r\n      const tempSkills = values.skills.split(\",\");\r\n      values.skills = tempSkills;\r\n      dispatch(ShowLoading());\r\n      const response = await axios.post(\"/api/portfolio/update-about\", {\r\n        ...values,\r\n        _id: portfolioData.about._id,\r\n      });\r\n      dispatch(HideLoading());\r\n      if (response.data.success) {\r\n        message.success(response.data.message);\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoading());\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        onFinish={onFinish}\r\n        layout=\"vertical\"\r\n        initialValues={{\r\n          ...portfolioData.about,\r\n          skills: portfolioData.about.skills.join(\" , \"),\r\n        }}\r\n      >\r\n        <Form.Item name=\"lottieURL\" label=\"Lottie URL\">\r\n          <input placeholder=\"Lottie URL\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"description1\" label=\"Description1\">\r\n          <textarea placeholder=\"Description1\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"description2\" label=\"Description2\">\r\n          <textarea placeholder=\"Description2\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"skills\" label=\"Skills\">\r\n          <textarea placeholder=\"Skills\" />\r\n        </Form.Item>\r\n        <div className=\"flex justify-end w-full\" label=\"Welcome Text\">\r\n          <button className=\"px-10 py-2 bg-primary text-white\" type=\"submit\">\r\n            SAVE\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminAbout;\r\n","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminIntro.js",["140"],[],"import React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ShowLoading, HideLoading } from \"../../redux/rootSlice\";\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nfunction AdminIntro() {\r\n  const dispatch = useDispatch();\r\n  const { portfolioData } = useSelector((state) => state.root);\r\n  const onFinish = async (values) => {\r\n    try {\r\n      dispatch(ShowLoading());\r\n      const response = await axios.post(\"/api/portfolio/update-intro\", {\r\n        ...values,\r\n        _id: portfolioData.intro._id,\r\n      });\r\n      dispatch(HideLoading());\r\n      if (response.data.success) {\r\n        message.success(response.data.message);\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoading());\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        onFinish={onFinish}\r\n        layout=\"vertical\"\r\n        initialValues={portfolioData.intro}\r\n      >\r\n        <Form.Item name=\"welcomeText\" label=\"Welcome Text\">\r\n          <input placeholder=\"Welcome Text\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"firstName\" label=\"First Name\">\r\n          <input placeholder=\"First Name\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"lastName\" label=\"Last Name\">\r\n          <input placeholder=\"Last Name\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"caption\" label=\"Caption\">\r\n          <input placeholder=\"Caption\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"description\" label=\"Description\">\r\n          <textarea placeholder=\"Description\" />\r\n        </Form.Item>\r\n        <div className=\"flex justify-end w-full\" label=\"Welcome Text\">\r\n          <button className=\"px-10 py-2 bg-primary text-white\" type=\"submit\">\r\n            SAVE\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminIntro;\r\n","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminContact.js",["141"],[],"import React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ShowLoading, HideLoading } from \"../../redux/rootSlice\";\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nfunction AdminContact() {\r\n  const dispatch = useDispatch();\r\n  const { portfolioData } = useSelector((state) => state.root);\r\n  const onFinish = async (values) => {\r\n    try {\r\n      dispatch(ShowLoading());\r\n      const response = await axios.post(\"/api/portfolio/update-contact\", {\r\n        ...values,\r\n        _id: portfolioData.contact._id,\r\n      });\r\n      dispatch(HideLoading());\r\n      if (response.data.success) {\r\n        message.success(response.data.message);\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoading());\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        onFinish={onFinish}\r\n        layout=\"vertical\"\r\n        initialValues={portfolioData.contact}\r\n      >\r\n        <Form.Item name=\"name\" label=\"Name\">\r\n          <input placeholder=\"Name\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"gender\" label=\"Gender\">\r\n          <input placeholder=\"Gender\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"age\" label=\"Age\">\r\n          <input placeholder=\"Age\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"email\" label=\"Email\">\r\n          <input placeholder=\"Email\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"mobile\" label=\"Mobile\">\r\n          <input placeholder=\"Mobile\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"address\" label=\"Address\">\r\n          <input placeholder=\"Address\" />\r\n        </Form.Item>\r\n\r\n        <div className=\"flex justify-end w-full\" label=\"Welcome Text\">\r\n          <button className=\"px-10 py-2 bg-primary text-white\" type=\"submit\">\r\n            SAVE\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminContact;\r\n","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminExperiences.js",["142"],[],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Modal, Form, message } from \"antd\";\r\nimport { HideLoading, ReloadData, ShowLoading } from \"../../redux/rootSlice\";\r\nimport axios from \"axios\";\r\n\r\nfunction Experiences() {\r\n  const dispatch = useDispatch();\r\n  const { portfolioData } = useSelector((state) => state.root);\r\n  const { experiences } = portfolioData;\r\n  const [showAddEditModal, setShowAddEditModal] = React.useState(false);\r\n  const [selectedItemForEdit, setSelectedItemForEdit] = React.useState(null);\r\n  const [type, setType] = React.useState(\"add\");\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      dispatch(ShowLoading());\r\n      let response;\r\n      if (selectedItemForEdit) {\r\n        response = await axios.post(\"/api/portfolio/update-experience\", {\r\n          ...values,\r\n          _id: selectedItemForEdit._id,\r\n        });\r\n      } else {\r\n        response = await axios.post(\"/api/portfolio/add-experience\", values);\r\n      }\r\n\r\n      dispatch(HideLoading());\r\n      if (response.data.success) {\r\n        message.success(response.data.message);\r\n        setShowAddEditModal(false);\r\n        setSelectedItemForEdit(null);\r\n        dispatch(HideLoading());\r\n        dispatch(ReloadData(true));\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoading());\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  const onDelete = async (item) => {\r\n    try {\r\n      dispatch(ShowLoading());\r\n      const response = await axios.post(\"/api/portfolio/delete-experience\", {\r\n        _id: item._id,\r\n      });\r\n      dispatch(HideLoading());\r\n      if (response.data.success) {\r\n        message.success(response.data.message);\r\n        dispatch(HideLoading());\r\n        dispatch(ReloadData(true));\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoading());\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          className=\"bg-primary px-5 py-2 text-white\"\r\n          onClick={() => {\r\n            setSelectedItemForEdit(null);\r\n            setShowAddEditModal(true);\r\n          }}\r\n        >\r\n          Add Experience\r\n        </button>\r\n      </div>\r\n      <div className=\"grid grid-cols-4 gap-5 mt-5 sm:grid-cols-1\">\r\n        {experiences.map((experience) => (\r\n          <div className=\"shadow border p-5 border-gray-400 flex flex-col\">\r\n            <h1 className=\"text-primary text-xl font-bold\">\r\n              {experience.period}\r\n            </h1>\r\n            <hr />\r\n            <h1>Company : {experience.company}</h1>\r\n            <h1>Role : {experience.title}</h1>\r\n            <h1>{experience.description}</h1>\r\n            <div className=\"flex justify-end gap-5 mt-5\">\r\n              <button\r\n                className=\"bg-red-500 text-white px-5 py-2 \"\r\n                onClick={() => {\r\n                  onDelete(experience);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <button\r\n                className=\"bg-primary text-white px-5 py-2\"\r\n                onClick={() => {\r\n                  setSelectedItemForEdit(experience);\r\n                  setShowAddEditModal(true);\r\n                  setType(\"edit\");\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {(type === \"add\" || selectedItemForEdit) && (\r\n        <Modal\r\n          visible={showAddEditModal}\r\n          title={selectedItemForEdit ? \"Edit Experience\" : \"Add Experience\"}\r\n          footer={null}\r\n          onCancel={() => {\r\n            setShowAddEditModal(false);\r\n            setSelectedItemForEdit(null);\r\n          }}\r\n        >\r\n          <Form\r\n            layout=\"vertical\"\r\n            onFinish={onFinish}\r\n            initialValues={selectedItemForEdit || {}}\r\n          >\r\n            <Form.Item name=\"period\" label=\"Period\">\r\n              <input placeholder=\"Period\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"company\" label=\"Company\">\r\n              <input placeholder=\"Company\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"title\" label=\"Title\">\r\n              <input placeholder=\"Title\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"description\" label=\"Description\">\r\n              <input placeholder=\"Description\" />\r\n            </Form.Item>\r\n\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                className=\"border-primary text-primary px-5 py-2\"\r\n                onClick={() => {\r\n                  setShowAddEditModal(false);\r\n                  setSelectedItemForEdit(null);\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button className=\"bg-primary text-white px-5 py-2\">\r\n                {selectedItemForEdit ? \"Update\" : \"Add\"}\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Experiences;\r\n","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Admin\\AdminProjects.js",["143"],[],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Modal, Form, message } from \"antd\";\r\nimport { HideLoading, ReloadData, ShowLoading } from \"../../redux/rootSlice\";\r\nimport axios from \"axios\";\r\n\r\nfunction AdminProjects() {\r\n  const dispatch = useDispatch();\r\n  const { portfolioData } = useSelector((state) => state.root);\r\n  const { projects } = portfolioData;\r\n  const [showAddEditModal, setShowAddEditModal] = React.useState(false);\r\n  const [selectedItemForEdit, setSelectedItemForEdit] = React.useState(null);\r\n  const [type, setType] = React.useState(\"add\");\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      const tempTechnologies = values?.technologies?.split(\",\") || [];\r\n      values.technologies = tempTechnologies;\r\n      dispatch(ShowLoading());\r\n      let response;\r\n      if (selectedItemForEdit) {\r\n        response = await axios.post(\"/api/portfolio/update-project\", {\r\n          ...values,\r\n          _id: selectedItemForEdit._id,\r\n        });\r\n      } else {\r\n        response = await axios.post(\"/api/portfolio/add-project\", values);\r\n      }\r\n\r\n      dispatch(HideLoading());\r\n      if (response.data.success) {\r\n        message.success(response.data.message);\r\n        setShowAddEditModal(false);\r\n        setSelectedItemForEdit(null);\r\n        dispatch(HideLoading());\r\n        dispatch(ReloadData(true));\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoading());\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  const onDelete = async (item) => {\r\n    try {\r\n      dispatch(ShowLoading());\r\n      const response = await axios.post(\"/api/portfolio/delete-project\", {\r\n        _id: item._id,\r\n      });\r\n      dispatch(HideLoading());\r\n      if (response.data.success) {\r\n        message.success(response.data.message);\r\n        dispatch(HideLoading());\r\n        dispatch(ReloadData(true));\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoading());\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          className=\"bg-primary px-5 py-2 text-white\"\r\n          onClick={() => {\r\n            setSelectedItemForEdit(null);\r\n            setShowAddEditModal(true);\r\n          }}\r\n        >\r\n          Add Project\r\n        </button>\r\n      </div>\r\n      <div className=\"grid grid-cols-3 gap-5 mt-5 sm:grid-cols-1\">\r\n        {projects.map((project) => (\r\n          <div className=\"shadow border p-5 border-gray-400 flex flex-col gap-5\">\r\n            <h1 className=\"text-primary text-xl font-bold\">{project.title}</h1>\r\n            <hr />\r\n            <img src={project.image} alt=\"\" className=\"h-60 w-80\" />\r\n            <h1>Role : {project.title}</h1>\r\n            <h1>{project.description}</h1>\r\n            <div className=\"flex justify-end gap-5 mt-5\">\r\n              <button\r\n                className=\"bg-red-500 text-white px-5 py-2 \"\r\n                onClick={() => {\r\n                  onDelete(project);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <button\r\n                className=\"bg-primary text-white px-5 py-2\"\r\n                onClick={() => {\r\n                  setSelectedItemForEdit(project);\r\n                  setShowAddEditModal(true);\r\n                  setType(\"edit\");\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {(type === \"add\" || selectedItemForEdit) && (\r\n        <Modal\r\n          visible={showAddEditModal}\r\n          title={selectedItemForEdit ? \"Edit Project\" : \"Add Project\"}\r\n          footer={null}\r\n          onCancel={() => {\r\n            setShowAddEditModal(false);\r\n            setSelectedItemForEdit(null);\r\n          }}\r\n        >\r\n          <Form\r\n            layout=\"vertical\"\r\n            onFinish={onFinish}\r\n            initialValues={\r\n              {\r\n                ...selectedItemForEdit,\r\n                technologies: selectedItemForEdit?.technologies?.join(\" , \"),\r\n              } || {}\r\n            }\r\n          >\r\n            <Form.Item name=\"title\" label=\"Title\">\r\n              <input placeholder=\"Title\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"image\" label=\"Image URL\">\r\n              <input placeholder=\"Image\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"description\" label=\"Description\">\r\n              <textarea placeholder=\"Description\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"link\" label=\"Link\">\r\n              <input placeholder=\"Link\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"technologies\" label=\"Technologies\">\r\n              <input placeholder=\"Technologies\" />\r\n            </Form.Item>\r\n\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                className=\"border-primary text-primary px-5 py-2\"\r\n                onClick={() => {\r\n                  setShowAddEditModal(false);\r\n                  setSelectedItemForEdit(null);\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button className=\"bg-primary text-white px-5 py-2\">\r\n                {selectedItemForEdit ? \"Update\" : \"Add\"}\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminProjects;\r\n","C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Footer.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Experiences.js",["144"],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Contact.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Courses.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\LeftSider.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Projects.js",[],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\About.js",["145"],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\pages\\Home\\Intro.js",["146"],[],"C:\\Users\\user\\mern-portfolio-udemy\\client\\src\\components\\SectionTitle.js",[],[],{"ruleId":"147","severity":1,"message":"148","line":1,"column":21,"nodeType":"149","messageId":"150","endLine":1,"endColumn":29},{"ruleId":"151","severity":1,"message":"152","line":39,"column":6,"nodeType":"153","endLine":39,"endColumn":21,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"152","line":45,"column":6,"nodeType":"153","endLine":45,"endColumn":18,"suggestions":"155"},{"ruleId":"147","severity":1,"message":"156","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"157","line":2,"column":16,"nodeType":"149","messageId":"150","endLine":2,"endColumn":21},{"ruleId":"147","severity":1,"message":"157","line":2,"column":16,"nodeType":"149","messageId":"150","endLine":2,"endColumn":21},{"ruleId":"147","severity":1,"message":"157","line":2,"column":16,"nodeType":"149","messageId":"150","endLine":2,"endColumn":21},{"ruleId":"147","severity":1,"message":"156","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"156","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":44,"column":14,"nodeType":"160","messageId":"161","endLine":44,"endColumn":58,"fix":"162"},{"ruleId":"147","severity":1,"message":"163","line":6,"column":11,"nodeType":"149","messageId":"150","endLine":6,"endColumn":18},{"ruleId":"147","severity":1,"message":"163","line":5,"column":11,"nodeType":"149","messageId":"150","endLine":5,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPortfolioData'. Either include it or remove the dependency array.","ArrayExpression",["164"],["165"],"'useEffect' is defined but never used.","'Input' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property description.","MemberExpression","unexpectedWhitespace",{"range":"166","text":"167"},"'loading' is assigned a value but never used.",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},[1597,1600],".","Update the dependencies array to be: [getPortfolioData, portfolioData]",{"range":"172","text":"173"},"Update the dependencies array to be: [getPortfolioData, reloadData]",{"range":"174","text":"175"},[1097,1112],"[getPortfolioData, portfolioData]",[1201,1213],"[getPortfolioData, reloadData]"]